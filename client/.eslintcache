[{"/Users/ninomiyadaisuke/graphql/client/src/reportWebVitals.js":"1","/Users/ninomiyadaisuke/graphql/client/src/index.js":"2","/Users/ninomiyadaisuke/graphql/client/src/App.js":"3","/Users/ninomiyadaisuke/graphql/client/src/components/SideNav.js":"4","/Users/ninomiyadaisuke/graphql/client/src/components/MovieList.js":"5","/Users/ninomiyadaisuke/graphql/client/src/components/Header.js":"6","/Users/ninomiyadaisuke/graphql/client/src/queries/queries.js":"7"},{"size":362,"mtime":1607064225876,"results":"8","hashOfConfig":"9"},{"size":547,"mtime":1607064225875,"results":"10","hashOfConfig":"9"},{"size":765,"mtime":1607305444198,"results":"11","hashOfConfig":"9"},{"size":144,"mtime":1607297769009,"results":"12","hashOfConfig":"9"},{"size":1453,"mtime":1607307030623,"results":"13","hashOfConfig":"9"},{"size":274,"mtime":1607297971177,"results":"14","hashOfConfig":"9"},{"size":218,"mtime":1607305658884,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4duy6h",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ninomiyadaisuke/graphql/client/src/reportWebVitals.js",[],"/Users/ninomiyadaisuke/graphql/client/src/index.js",[],"/Users/ninomiyadaisuke/graphql/client/src/App.js",[],"/Users/ninomiyadaisuke/graphql/client/src/components/SideNav.js",[],"/Users/ninomiyadaisuke/graphql/client/src/components/MovieList.js",["31"],"import React from 'react'\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { gql } from \"apollo-boost\"\nimport { MOVIE_LIST } from \"../queries/queries\"\nimport { Card, CardBody, Table } from 'reactstrap'\n\n\nconst MovieList = () => {\n    const { loading, error, data } = useQuery(MOVIE_LIST)\n    console.log(data);\n    if (loading) {\n        return <p>Loading...</p>\n    } else if (error) {\n        return <p>Error</p>\n    } else {\n        return (\n            <Card>\n                <CardBody>\n                    <Table hover>\n                        <thead>\n                            <tr>\n                                <th>タイトル</th>\n                                <th>ジャンル</th>\n                                <th>監督</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                data.movies.map(({ id, name, genre, director }) => (\n                                    <tr key={id}>\n                                        <td>{name}</td>\n                                        <td>{genre}</td>\n                                        <td>{director.name}</td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </Table>\n                </CardBody>\n            </Card>\n        )\n    }\n}\n\nexport default MovieList","/Users/ninomiyadaisuke/graphql/client/src/components/Header.js",[],"/Users/ninomiyadaisuke/graphql/client/src/queries/queries.js",[],{"ruleId":"32","severity":1,"message":"33","line":3,"column":10,"nodeType":"34","messageId":"35","endLine":3,"endColumn":13},"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar"]